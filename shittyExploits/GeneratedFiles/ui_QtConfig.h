/********************************************************************************
** Form generated from reading UI file 'QtConfigHp5884.ui'
**
** Created by: Qt User Interface Compiler version 5.9.3
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef QTCONFIGHP5884_H
#define QTCONFIGHP5884_H

#include <QtCore/QVariant>
#include <QtWidgets/QAction>
#include <QtWidgets/QApplication>
#include <QtWidgets/QButtonGroup>
#include <QtWidgets/QCheckBox>
#include <QtWidgets/QHeaderView>
#include <QtWidgets/QLabel>
#include <QtWidgets/QLineEdit>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QWidget>

QT_BEGIN_NAMESPACE

class Ui_QtConfig
{
public:
    QLineEdit *descriptionLine;
    QLabel *descriptionLabel;
    QLabel *isRecordingLabel;
    QCheckBox *isRecordingCheckbox;
    QLabel *isTalkerLabel;
    QLabel *isChannelCommanderLabel;
    QCheckBox *isTalkerCheckbox;
    QCheckBox *isChannelCommanderCheckbox;
    QPushButton *acceptButton;
    QPushButton *closeButton;

    void setupUi(QWidget *QtConfig)
    {
        if (QtConfig->objectName().isEmpty())
            QtConfig->setObjectName(QStringLiteral("QtConfig"));
        QtConfig->resize(441, 185);
        QtConfig->setMinimumSize(QSize(0, 0));
        QtConfig->setContextMenuPolicy(Qt::NoContextMenu);
        descriptionLine = new QLineEdit(QtConfig);
        descriptionLine->setObjectName(QStringLiteral("descriptionLine"));
        descriptionLine->setGeometry(QRect(200, 50, 231, 20));
        descriptionLabel = new QLabel(QtConfig);
        descriptionLabel->setObjectName(QStringLiteral("descriptionLabel"));
        descriptionLabel->setGeometry(QRect(10, 50, 191, 16));
        isRecordingLabel = new QLabel(QtConfig);
        isRecordingLabel->setObjectName(QStringLiteral("isRecordingLabel"));
        isRecordingLabel->setGeometry(QRect(10, 20, 191, 16));
        isRecordingCheckbox = new QCheckBox(QtConfig);
        isRecordingCheckbox->setObjectName(QStringLiteral("isRecordingCheckbox"));
        isRecordingCheckbox->setGeometry(QRect(200, 20, 70, 17));
        isTalkerLabel = new QLabel(QtConfig);
        isTalkerLabel->setObjectName(QStringLiteral("isTalkerLabel"));
        isTalkerLabel->setGeometry(QRect(10, 80, 191, 16));
        isChannelCommanderLabel = new QLabel(QtConfig);
        isChannelCommanderLabel->setObjectName(QStringLiteral("isChannelCommanderLabel"));
        isChannelCommanderLabel->setGeometry(QRect(10, 110, 191, 16));
        isTalkerCheckbox = new QCheckBox(QtConfig);
        isTalkerCheckbox->setObjectName(QStringLiteral("isTalkerCheckbox"));
        isTalkerCheckbox->setGeometry(QRect(200, 80, 70, 17));
        isChannelCommanderCheckbox = new QCheckBox(QtConfig);
        isChannelCommanderCheckbox->setObjectName(QStringLiteral("isChannelCommanderCheckbox"));
        isChannelCommanderCheckbox->setGeometry(QRect(200, 110, 70, 17));
        acceptButton = new QPushButton(QtConfig);
        acceptButton->setObjectName(QStringLiteral("acceptButton"));
        acceptButton->setGeometry(QRect(34, 150, 171, 23));
        closeButton = new QPushButton(QtConfig);
        closeButton->setObjectName(QStringLiteral("closeButton"));
        closeButton->setGeometry(QRect(224, 150, 171, 23));

        retranslateUi(QtConfig);
        QObject::connect(acceptButton, SIGNAL(clicked()), QtConfig, SLOT(close()));
        QObject::connect(acceptButton, SIGNAL(clicked()), QtConfig, SLOT(saveToConfig()));
        QObject::connect(closeButton, SIGNAL(clicked()), QtConfig, SLOT(close()));

        QMetaObject::connectSlotsByName(QtConfig);
    } // setupUi

    void retranslateUi(QWidget *QtConfig)
    {
        QtConfig->setWindowTitle(QApplication::translate("QtConfig", "Shitty Exploits", Q_NULLPTR));
        descriptionLabel->setText(QApplication::translate("QtConfig", "Description", Q_NULLPTR));
        isRecordingLabel->setText(QApplication::translate("QtConfig", "Is Recording", Q_NULLPTR));
        isRecordingCheckbox->setText(QString());
        isTalkerLabel->setText(QApplication::translate("QtConfig", "Is Talker", Q_NULLPTR));
        isChannelCommanderLabel->setText(QApplication::translate("QtConfig", "Is Channel Commander", Q_NULLPTR));
        isTalkerCheckbox->setText(QString());
        isChannelCommanderCheckbox->setText(QString());
        acceptButton->setText(QApplication::translate("QtConfig", "Annehmen", Q_NULLPTR));
        closeButton->setText(QApplication::translate("QtConfig", "Abbrechen", Q_NULLPTR));
    } // retranslateUi

};

namespace Ui {
    class QtConfig: public Ui_QtConfig {};
} // namespace Ui

QT_END_NAMESPACE

#endif // QTCONFIGHP5884_H
